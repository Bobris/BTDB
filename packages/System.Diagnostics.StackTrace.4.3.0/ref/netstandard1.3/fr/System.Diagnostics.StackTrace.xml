<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.StackTrace</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.StackFrame">
      <summary>Fournit des informations sur un <see cref="T:System.Diagnostics.StackFrame" />, qui représente un appel de fonction sur la pile des appels du thread en cours.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <summary>Obtient le numéro de la colonne dans le fichier qui contient le code en cours d'exécution.Cette information est généralement extraite des symboles de débogage de l'exécutable.</summary>
      <returns>Numéro de colonne du fichier, ou 0 (zéro) si le numéro de la colonne dans le fichier ne peut pas être déterminé.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <summary>Obtient le numéro de la ligne dans le fichier qui contient le code en cours d'exécution.Cette information est généralement extraite des symboles de débogage de l'exécutable.</summary>
      <returns>Numéro de ligne du fichier, ou 0 (zéro) si le numéro de la ligne dans le fichier ne peut pas être déterminé.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetFileName">
      <summary>Obtient le nom du fichier qui contient le code en cours d'exécution.Cette information est généralement extraite des symboles de débogage de l'exécutable.</summary>
      <returns>Nom du fichier, ou null si le nom du fichier ne peut être déterminé.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetILOffset">
      <summary>Obtient l'offset par rapport au début du code MSIL (Microsoft Intermediate Language) pour la méthode en cours d'exécution.Cet offset peut être une approximation selon que le compilateur juste-à-temps (JIT) génère actuellement du code, ou non.La génération d'informations de débogage est déterminée par <see cref="T:System.Diagnostics.DebuggableAttribute" />.</summary>
      <returns>Offset par rapport au début du code MSIL pour la méthode en cours d'exécution.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackFrame.GetMethod">
      <summary>Obtient la méthode dans laquelle le frame s'exécute.</summary>
      <returns>Méthode dans laquelle le frame s'exécute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <summary>Définit la valeur retournée par la méthode <see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /> ou <see cref="M:System.Diagnostics.StackFrame.GetILOffset" /> lorsque l'offset natif ou MSIL (Microsoft Intermediate Language) est inconnu.Ce champ est constant.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackFrame.ToString">
      <summary>Génère une représentation lisible de la trace de la pile.</summary>
      <returns>Représentation lisible de la trace de la pile.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Diagnostics.StackFrameExtensions"></member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)"></member>
    <member name="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)"></member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)"></member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)"></member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)"></member>
    <member name="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)"></member>
    <member name="T:System.Diagnostics.StackTrace">
      <summary>Représente une trace de la pile, à savoir une collection ordonnée de frames de pile.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.StackTrace" /> à l'aide de l'objet exception fourni, en capturant éventuellement les informations sur la source.</summary>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="e" /> est null. </exception>
    </member>
    <member name="M:System.Diagnostics.StackTrace.GetFrames">
      <summary>Retourne une copie de tous les frames de pile dans la trace de la pile actuelle.</summary>
      <returns>Tableau de type <see cref="T:System.Diagnostics.StackFrame" /> représentant les appels de fonctions dans la trace de la pile.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Diagnostics.StackTrace.ToString">
      <summary>Génère une représentation lisible de la trace de la pile.</summary>
      <returns>Représentation lisible de la trace de la pile.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>