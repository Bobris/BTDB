List<VInt32>
Dictionary<String, Double>
BTDBTest.TypeSerializersTest+SimpleDto
{
    IntField : VInt32
    StringField : String
}
BTDBTest.TypeSerializersTest+ClassWithList
{
    List : List<VInt32>
}
BTDBTest.TypeSerializersTest+ClassWithDict
{
    Dict : Dictionary<VInt32, String>
}
BTDBTest.TypeSerializersTest+SelfPointing1
{
    Other1 : VInt32
    Self1 : BTDBTest.TypeSerializersTest+SelfPointing1
    Self2 : BTDBTest.TypeSerializersTest+SelfPointing2
    {
        Other2 : String
        Self1 : BTDBTest.TypeSerializersTest+SelfPointing1
        Self2 : BTDBTest.TypeSerializersTest+SelfPointing2
    }
}
BTDBTest.TypeSerializersTest+SelfPointing2
{
    Other2 : String
    Self1 : BTDBTest.TypeSerializersTest+SelfPointing1
    {
        Other1 : VInt32
        Self1 : BTDBTest.TypeSerializersTest+SelfPointing1
        Self2 : BTDBTest.TypeSerializersTest+SelfPointing2
    }
    Self2 : BTDBTest.TypeSerializersTest+SelfPointing2
}
BTDBTest.TypeSerializersTest+TestEnum
enum {
    Item1 = 0
    Item2 = 1
}